---
version: "3.9"

services:
  server:
    image: ${AUTHENTIK_IMAGE}:${AUTHENTIK_TAG}
    container_name: authentik
    command: server
    labels:
      caddy: ${DOMAIN}
      caddy.reverse_proxy: "{{upstreams 9000}}"
    volumes:
      - ~/data/authentik/media:/media
      - ~/data/authentik/custom-templates:/templates
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:?database user required}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:?database name required}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS:?database password required}
    env_file:
      - .env
    networks:
      - caddy
      - authentik
    restart: unless-stopped

  worker:
    image: ${AUTHENTIK_IMAGE}:${AUTHENTIK_TAG}
    user: root
    command: worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/data/authentik/media:/media
      - ~/data/authentik/certs:/certs
      - ~/data/authentik/custom-templates:/templates
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:?database user required}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:?database name required}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS:?database password required}
    env_file:
      - .env
    networks:
      - authentik
    restart: unless-stopped

  postgresql:
    image: postgres:12-alpine
    volumes:
      - ~/data/authentik/database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PG_PASS:?database password required}
      - POSTGRES_USER=${PG_USER:?database user required}
      - POSTGRES_DB=${PG_DB:?database name required}
    env_file:
      - .env
    networks:
      - authentik
    restart: unless-stopped
  
  redis:
    image: redis:alpine
    networks:
      - authentik
    restart: unless-stopped

networks:
  caddy:
    external: true
  authentik:
    name: authentik